' Gambas module file

''--------------------------------------- General setting file ---------------------------------
Public Function ShowSettingValue(sFile As String, strSetting As String) As String

  Dim ConfFile As Settings
  Dim strVal As String
  Dim xx As String

  ConfFile = New Settings(sFile)
  strVal = ConfFile[strSetting, Null]
  If strVal Then
    xx = Trim(strVal)
  Else
    xx = ""
  Endif
  Return xx

End

Public Function ShowExistSettingValue(sFile As String, strSetting As String) As String

  Dim ConfFile As Settings
  Dim strVal As String
  Dim xx As String

  If Exist(sFile) Then
    ConfFile = New Settings(sFile)
    strVal = ConfFile[strSetting, Null]
    If strVal Then
      xx = Trim(strVal)
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

''-- from modprint
Public Function GetDirectFillresult(res As Result) As String[]

  Dim xx As String[]
  Dim ref As String
  Dim xval As String[]

  xx = New String[]
  If res.Available Then
    ref = modDBApp.FirstResultField(res)
    xval = res.All(ref)
    If xval Then
      xx = xval
    Endif
  Endif
  Return xx

End

''slow but no null value
Public Function GetDirectFillresultNoNull(res As Result) As String[]

  Dim xx As String[]
  Dim ref As String

  xx = New String[]
  If res.Available Then
    ref = modDBApp.FirstResultField(res)
    For Each res
      If res[ref] Then
        xx.Add(res[ref])
      Endif
    Next
  Endif
  Return xx

End

''------------------------------------ Pre print formatting -------------------------------------
Public Function PrePrintFormatting($path As String, $size As String) As String

  Dim xx As String
  Dim xscript As String
  Dim xexec As String
  Dim xtrans As String

  xscript = modSettings.ShowSettingFromFIle("PrePrintFormatScript/" & $size)
  xexec = modSettings.ShowSettingFromFIle("PrePrintFormatExec/" & $size)
  xtrans = modSettings.ShowSettingFromFIle("PrePrintTranslate/" & $size)
  If xscript Then
    If xtrans = "Yes" Then
      xx = GetTranslatedFile(xscript, $path)
    Else
      xx = modExternal.GerScriptValueNoCache(xscript, xexec, $path)
    Endif
  Else
    xx = $path
  Endif
  Return Trim(xx)

End

Public Function GetTranslatedFile(xScript As String, sInFile As String) As String

  Dim xxx As String
  Dim xfinal As String

  Dim hFile As File
  Dim sLine As String
  Dim linWord As String[]

  If Exist(xScript) Then
    xxx = File.Load(sInFile)

    hFile = Open xScript
    modBasic.DebugString("Open File " & xScript)
    For Each sLine In hFile.Lines
      If Len(Trim(sLine)) Then
        linWord = Split(sLine, ";")
        xxx = Replace(xxx, linWord[0], linWord[1])
      Endif
    Next
    hFile.Close()

    xfinal = Temp() & "." & File.Ext(sInFile)
    File.Save(xfinal, xxx)

  Else
    xfinal = sInFile
  Endif
  Return xfinal

End

''---------------------------------- Report Procedures ------------------------
Public Sub OpenHTMLPreview(encid As String, sPath As String, sSize As String)

  Dim xextra As String

  If sSize = "ReportSize" Then
    xextra = "WithReport"
  Else If sSize = "LabelSize" Then
    xextra = "WithLabel"
  Else If sSize = "InvoiceSize" Then
    xextra = "WithInvoice"
  Endif

  If sPath Then
    modPrint.PrintPopUp(encid, sPath, sSize)
  Endif
  modPatientSub.PrintExtraReport(encid, xextra)

End

''Export Report: open popup and then export (use for report made by app)
Public Sub DisplayReportExport(sPath As String) As String

  Dim sTarget As String
  Dim hForm As FmWebView

  If sPath Then
    If modBasic.$ExpoRepoUser = True Then
      If modBasic.$ReportingPopUp = "CSV File" Then
        If Dialog.SelectDirectory() Then Return
        sTarget = Dialog.Path &/ modString.GetNowString() & ".csv"
        Copy sPath To sTarget
      Else
        modPrint.PrintPopUp("", sPath, "ReportSize")
      Endif
    Else
      sTarget = "file://" & sPath
      hForm = New FmWebView(sTarget, False, "")
      ' hForm.ShowModal
      modAppSupport.FindWorSpace(modHelpVariable.$LogInCategory).Add(hForm)
    Endif
  Endif

End

''do not open pop up form (use for html created from other apps like PSPP)
Public Sub OpenBrowser(sPath As String)

  Dim hForm As FmWebView
  Dim sTarget As String

  If InStr(sPath, "http://") Then
    sTarget = sPath
  Else If InStr(sPath, "https://") Then
    sTarget = sPath
  Else If InStr(sPath, "file://") Then
    sTarget = sPath
  Else
    sTarget = "file://" & sPath
  Endif

  If modBasic.$ExpoRepoUser = True Then
    If modBasic.$browserFormat = "External" Then                                             ''
      Desktop.Open(sTarget)
    Else
      hForm = New FmWebView(sTarget, False, "")
      ' hForm.ShowModal
      modAppSupport.FindWorSpace(modHelpVariable.$LogInCategory).Add(hForm)
    Endif

  Else
    hForm = New FmWebView(sTarget, False, "")
    ' hForm.ShowModal
    modAppSupport.FindWorSpace(modHelpVariable.$LogInCategory).Add(hForm)
  Endif

End
