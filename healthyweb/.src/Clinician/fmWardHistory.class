' Gambas class file

''PATIENT PROFILE
Private $UserRestrictPat As String[]

''Main Form
Private $rData As Result
Private $aMyFields As String[]

Private $UserRestrict As String[]
Private $PatientNum As String
Private $Category As String
Private $sDepart As String
Private $secText As String
Private $reference As String
Private $sPackage As String
Private $sTatus As String

Public Sub _new(sCategory As String, encid As String, sDepartment As String)

  Dim sList As String[]

  $Category = sCategory
  $sDepart = sDepartment

  If encid Then
    txtencid.Text = encid
  Endif

  ''PATIENT PROFILE
  cmbpatheightunit.List = ["cm", "inch", "foot"]
  $UserRestrictPat = modBasic.$ClinicDisableCompo
  If MMain.$SISHAppMode = "HIS" Then
    txtbedno.ReadOnly = True
  Endif

  ''Main Form
  $UserRestrict = modBasic.$ClinicDisableCompo
  $reference = modSettings.ShowSettingFromFIle($Category & "/RecommendedExam")
  If Not $reference Then
    sList = modMedicine.FillClinicalReference($Category)
    If sList And If sList.Count Then
      $reference = sList[0]
    Endif
  Endif
  If $reference Then
    cmbcategory.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldcategory) as col from tblstructexam where fldclass=&1 and fldsubclass=&2 and fldreferencee=&3", $sDepart, $Category, $reference))
  Endif

  If $UserRestrictPat Then
    RestrictUserAccessPat()
  Endif

  If modBasic.$TabletModeEnable = "Yes" Then
  Else
    txtencid.SetFocus
  Endif

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

''====================== PATIENT PROFILE =================================
Public Sub txtencid_Activate()

  GetEncounterValue()

End

Public Sub btnencidsearch_Click()

  If Not txtencid.Text Then
    txtencid.Text = PatSearch("Encounter")
  Endif

End

Public Sub mnusearmulti_Click()

  If Not txtencid.Text Then
    txtencid.Text = GetEncid()
  Endif

End

Public Sub btnwebcam_Click()

  If txtencid.Text Then
    GetEncounterValue()
  Else
    txtencid.Text = QRScanValue("")
  Endif

End

Private Sub GetEncounterValue()

  Dim res As Result

  If Not txtpatientname.Text Then
    If Not txtencid.Text Then Return
    If modBasic.$EncIdPrefix And If txtencid.Text = modBasic.$EncIdPrefix Then
      txtencid.SetFocus
      Return
    Endif

    ' If modPatientSub.LockEncounterDesk(Trim(txtencid.Text)) = False Then
    '   txtencid.Text = ""
    '   Message.Warning(("Encounter Locked"), ("OK"))
    '   ' Balloon.Delay = modBasic.$BalloonDelay
    '   txtencid.SetFocus
    ' Endif

    dtdob.Tag = ""
    If txtencid.Text Then
      If txtencid.Text = modBasic.$EncIdPrefix Then
      Else
        modSettings.SaveValuesToLog("LastValue/Encounter", Trim(txtencid.Text))
      Endif
      res = modDatabase.$myConn.Exec("select fldpatientval from tblencounter where fldencounterval=&1", Trim(txtencid.Text))
      If res.Available = False Then
        modLinkDB.CheckEncDataRemote(Trim(txtencid.Text))
        txtencid.SetFocus
      Else
        txtpatientname.Text = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
        If txtpatientname.Text Then
          txtgender.Text = modPatient.GetPatientSex(Trim(txtencid.Text))
          txtpatientaddress.Text = modPatient.GetPatientAddressByEnc(Trim(txtencid.Text))
          dtdob.Tag = modPatient.GetPatientBirthDay(Trim(txtencid.Text))
          modDateSub.GetAgeControlFromDate(dtdob.Tag, txtpatage, cmbpatageunit)

          $sTatus = modPatient.CurrentAdmissionStatus(Trim(txtencid.Text))
          txtnow.Text = $sTatus
          txtbedno.Text = modPatient.GetLocationSetting(Trim(txtencid.Text), txtnow.Text)
          txtpatdoa.Text = modReportVar.GetDateTimeReport(modPatient.GetRecordDate(Trim(txtencid.Text)), gb.GeneralDate)
          txtpatweight.Value = modClinic.GetBodyWeight(Trim(txtencid.Text))
          btnconsult.Tag = modPatient.GetAttendingConsultant(Trim(txtencid.Text))
          btnconsult.Text = modGeneral.GetUserFullName(btnconsult.Tag)
          $sPackage = modNonMedical.DefaultBillingScheme(Trim(txtencid.Text), modBasic.$compID)
          modClinSub.GetPatientHeight(Trim(txtencid.Text), txtpatheight, cmbpatheightunit)
          modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", Trim(txtencid.Text))
          UpdateTriage()
          Wait
          If modPatientSub.AllowEncIDHistory(Trim(txtencid.Text), modDatabase.$myConn) = True Then
            BlockDCButton()
            modImage.ShowPhotoSplash("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)))
            ''MAIN FORM
            BasicInfoPatient()
            txtencid.ReadOnly = True
          Else
            Me.Enabled = False
          Endif
        Else
          Message.Warning(("Encounter ID not found"), ("OK"))
          ' Balloon.Delay = modBasic.$BalloonDelay
          txtencid.SetFocus
        Endif
      Endif
    Endif
  Endif

End

Public Sub UpdateTriage()

  txtcolor.Background = modPatient.GetPatientColor(Trim(txtencid.Text))

End

Private Sub BlockDCButton()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm(txtnow.Text)
  tlbtnaddheight.Enabled = xx
  tlbtnaddbed.Enabled = xx
  tlbtnadwt.Enabled = xx
  dtdob.Enabled = xx
  btnpic.Enabled = xx
  btnselectuser.Enabled = xx

End

Private Sub RestrictUserAccessPat()

  If $UserRestrictPat.Exist("Bed Assignment") Then
    tlbtnaddbed.Visible = False
  Endif
  If $UserRestrictPat.Exist("Body Weight") Then
    tlbtnadwt.Visible = False
  Endif
  If $UserRestrictPat.Exist("Body Height") Then
    tlbtnaddheight.Visible = False
  Endif

End

''------- Basic Parameters
Public Sub btnpic_Click()

  Dim hForm As FmPersonImage

  If txtencid.Text Then
    hForm = New FmPersonImage("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)), False)
    hForm.ShowModal
  Endif

End

Public Sub tlbtnaddheight_Click()

  If txtencid.Text Then
    If txtpatheight.Value Then
      If cmbpatheightunit.Text Then
        modClinSub.UpdatePatientHeight(Trim(txtencid.Text), txtpatheight.Value, cmbpatheightunit.Text)
        tlbtnaddheight.Enabled = False
        Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
        ' Balloon.Delay = modBasic.$BalloonDelay
      Endif
    Endif
  Endif

End

Public Sub tlbtnadwt_Click()

  If txtencid.Text Then
    If txtpatweight.Value Then
      modClinSub.AddGeneralParametersQuanti(Trim(txtencid.Text), "Body Weight", txtpatweight.Value)
      tlbtnadwt.Enabled = False
      Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
      ' Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

Public Sub dtdob_Click()

  Dim dtdate As Date

  If txtencid.Text Then
    dtdate = GetDateValue("Date of Birth of " & txtpatientname.Text, "DOBirth", dtdob.Tag)
    If dtdate Then
      modPatientSub.UpdatePatDOB(Trim(txtencid.Text), dtdate)
      modDateSub.GetAgeControlFromDate(dtdate, txtpatage, cmbpatageunit)
      dtdob.Tag = dtdate
      Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
      ' Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

''------------Hospital related parameters
Public Sub btnselectuser_Click()

  Dim xMedUser As String[]

  If txtencid.Text Then
    xMedUser = MedicalSelectedValue(("Select Consultant"), modBasic.$IPConsultUserList)
    If xMedUser And If xMedUser.Count Then
      btnconsult.Tag = xMedUser[0]
      btnconsult.Text = xMedUser[1]
    Endif
    If btnconsult.Tag Then
      modPatientSub.UpdateAttendingConsultant(Trim(txtencid.Text), btnconsult.Tag)
      Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
      ' Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

Public Sub btnsms_Click()

  Dim xval As String

  If btnconsult.Tag Then
    xval = modDevice.SendSMSToInpatDoc(Trim(txtencid.Text), modGeneral.GetUserContact(btnconsult.Tag))
    If xval Then
      Message.Info(xval, ("OK"))
    Endif
  Endif

End

Public Sub tlbtnaddbed_Click()

  If txtencid.Text Then
    If MMain.$SISHAppMode = "HIS" Then
      If modHelpVariable.$LogInCategory = "Clinician" Then
        If txtnow.Text = "Admitted" Then
          txtbedno.Text = GetBedNumber(Trim(txtencid.Text))
        Endif
      Endif
    Endif
  Endif

End

Public Sub btnconsult_Change()

  If btnconsult.Text = "" Then
    btnconsult.Tag = ""
  Endif

End

Public Sub tlbtnpayment_Click()

  If txtencid.Text Then
    modNonMedical.CurrentPayStatusMsg(Trim(txtencid.Text))
  Endif

End

Public Sub btnprofile_Click()

  Dim hForm As FmMinProfile

  hForm = New FmMinProfile(Trim(txtencid.Text))
  hForm.ShowModal()

End

''============================== MAIN FORM ================================
Private Sub BasicInfoPatient()

  If txtencid.Text Then
    $PatientNum = modPatient.GetPatientNoByEnc(Trim(txtencid.Text))
    ButtonControl()
  Endif

End

Private Sub ButtonControl()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm(txtnow.Text)
  btncomponents.Enabled = xx
  btneditflag.Enabled = xx
  btndelete.Enabled = xx
  grdtreeview.Enabled = xx
  btndemograph.Enabled = xx
  btnvital.Enabled = xx
  btngenservice.Enabled = xx
  btnlabs.Enabled = xx
  btnradio.Enabled = xx

  If $UserRestrict Then
    UserAccessRestrict()
  Endif

End

Private Sub UserAccessRestrict()

  If $UserRestrict.Exist("Bed Assignment") Then
    tlbtnaddbed.Enabled = False
  Endif
  If $UserRestrict.Exist("Body Weight") Then
    tlbtnadwt.Enabled = False
  Endif
  If $UserRestrict.Exist("Body Height") Then
    tlbtnaddheight.Enabled = False
  Endif
  If $UserRestrict.Exist("Complete Examination") Then
    grdtreeview.Enabled = False
    GridView1.Enabled = False
  Endif
  If $UserRestrict.Exist("Laboratory Request") Then
    btnlabs.Enabled = False
  Endif
  If $UserRestrict.Exist("Radiology Request") Then
    btnradio.Enabled = False
  Endif
  If $UserRestrict.Exist("Pharmacy Request") Then
    btnpharm.Enabled = False
  Endif
  If $UserRestrict.Exist("Demographics") Then
    btndemograph.Enabled = False
  Endif
  If $UserRestrict.Exist("General Images") Then
    btnimage.Enabled = False
  Endif
  If $UserRestrict.Exist("PACS Images") Then
    btnpacs.Enabled = False
  Endif
  If $UserRestrict.Exist("Essential Examinations") Then
    btnvital.Enabled = False
  Endif

End

''-------------Menus ----------------------
Public Sub mnublank_Click()

  ' btnblankform_Click()

End

Public Sub mnuregister_Click()

  If Not txtencid.Text Or If txtencid.Text = modBasic.$EncIdPrefix Then
    If modBasic.$regF1Clinic = "Yes" Or If modBasic.$regF1Clinic = "Partial" Then
      txtencid.Text = RegistrationNewForm()
    Else If modBasic.$regF1Clinic = "Full" Then
      txtencid.Text = RegistrationForm(False)
    Endif
  Endif

End

Public Sub mnulastencid_Click()

  txtencid.Text = modSettings.ShowLogValues("LastValue/Encounter")

End

Public Sub mnupatlock_Click()

  If txtencid.Text Then
    ' modPatientSub.LockPatientActivity(Me.Name, Trim(txtencid.Text))
  Endif

End

''---------------- Exam List ---------------------
Public Sub btnshowtree_Click()

  If cmbcategory.Text Then
    LoadTreeData()
  Endif

End

Private Sub LoadTreeData()

  $secText = ""
  FillClinicalTree(grdtreeview, $Category, cmbcategory.Text, $sDepart)
  grdtreeview.SetFocus

End

Private Sub ShowSelectedVar()

  Dim res As Result
  Dim sList As String[]
  Dim hForm As FmEnterMultiExam

  If grdtreeview.Current.Text Then
    If txtencid.Text Then

      If modSettings.ShowSettingFromFIle("ClinicForms/GroupStructuredExams") = "Yes" Then
        sList = New String[]
        res = modDatabase.$myConn.Exec("select fldheadcode from tblstructexam where fldclass=&1 and fldsubclass=&2 and fldcategory=&3 and flditem=&4 and fldreferencee=&5 ORDER BY fldheadid", $sDepart, $Category, cmbcategory.Text, grdtreeview.Current.Text, $reference)
        If res.Available Then
          For Each res
            sList.Add(res!fldheadcode)
          Next
          hForm = New FmEnterMultiExam(grdtreeview.Current.Text, Trim(txtencid.Text), cmbcategory.Text, sList, $Category)
          hForm.ShowModal
        Endif

      Else
        If grdtreeview.Current.Image = "icons/coll3.png" Then
          SelectDIrectEntryForm()
        Else
          modFillContainer.ExpandClickTreeView(grdtreeview)
        Endif
      Endif
      ShowClinicTable()

    Endif
  Endif

End

Public Sub grdtreeview_Select()

  ShowSelectedVar()

End

' Public Sub btnshowlist_Click()
'
'   ShowSelectedVar()
'
' End

''---------------------- Grid View ------------------
Private Sub ShowClinicTable()

  If cmbcategory.Text
    If grdtreeview.Current.Image = "icons/coll2.png" Then
      If $secText Then
        grdtreeview[$secText].Expanded = False
      Endif
      $rData = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldtime,fldid,fldserialval,fldrepquali,fldrepquanti from tblpatientexam where fldinput=&1 and fldencounterval=&2 and fldsave=&3 and fldserialval in(select fldheadcode from tblstructexam where fldsubclass=&4 and fldcategory=&5 and flditem=&6 and fldclass=&7 and fldreferencee=&8) ORDER BY fldtime", cmbcategory.Text, Trim(txtencid.Text), True, $Category, cmbcategory.Text, grdtreeview.Current.Text, $sDepart, $reference)
      $secText = grdtreeview.Current.Key
    Else
      $rData = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldtime,fldid,fldserialval,fldrepquali,fldrepquanti from tblpatientexam where fldinput=&1 and fldencounterval=&2 and fldsave=&3 and fldserialval in(select fldheadcode from tblstructexam where fldsubclass=&4 and fldcategory=&5 and flditem=&6 and fldclass=&7 and fldreferencee=&8) ORDER BY fldtime", cmbcategory.Text, Trim(txtencid.Text), True, $Category, cmbcategory.Text, modFillContainer.GetTextFromTreeKey(grdtreeview.Current.ParentKey), $sDepart, $reference)                                                                      ''

    Endif

    ' $rData = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldtime,fldid,fldserialval,fldrepquali,fldrepquanti from tblpatientexam where fldinput=&1 and fldencounterval=&2 and fldsave=&3 and fldserialval in(select fldheadcode from tblstructexam where fldsubclass=&4 and fldcategory=&5 and fldclass=&6 and fldreferencee=&7)", cmbcategory.Text, Trim(txtencid.Text), True, $Category, cmbcategory.Text, $sDepart, $reference)               ''
    $aMyFields = New String[]
    modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

    With GridView1
      .Columns[0].Hidden = True
      .Columns[1].Hidden = True
      .Columns[2].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
      .Columns[3].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
      .Columns[4].Width = CStr(225 * modBasic.$AppWidthRatio) & "px"
      .Columns[5].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      .Columns[6].Hidden = True
      .Columns[7].Hidden = True
      .Columns[8].Hidden = True
      .Columns[9].Hidden = True

      .Columns[2].Text = "Examination"
      .Columns[4].Text = "Observation"
      .Columns[5].Text = "Time"
    End With
  Endif

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rData[$aMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else If Column = 4 Then
    Data.Html = modClinic.GetExamValueString(Trim(txtencid.Text), $rData[$aMyFields[Column]], False)
  Else If Column = 5 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)

  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub btncomponents_Click()

  Dim yqualival As Variant[]
  Dim xquantival As Variant[]
  Dim rsn As Result
  Dim xdate As Date

  Dim opt As String[]
  Dim xval As String
  Dim sTable As String[]
  Dim sName As String

  Dim yyy As String[]
  Dim res1 As Result
  Dim hForm2 As FmEnterMultiple
  Dim xData As Variant[]

  Dim cForm As CFindExam
  Dim examtype As String
  Dim sExam As String
  Dim sOptName As String
  Dim sDefault As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If $rData["fldtype"] = "Qualitative" Then
      rsn = modDatabase.$myConn.Exec("select fldhead,fldtesttype,fldtanswertype,fldsysconst from tblstructexam where fldheadcode=&1", $rData["fldserialval"])

      If rsn.Available And If rsn["fldsysconst"] Then
        cForm = New CFindExam(rsn["fldsysconst"])
        examtype = cForm.GetExamMode()
        sExam = cForm.GetExamName()
        sOptName = cForm.GetExamOption()
        sDefault = cForm.GetExamDefault()
      Else
        examtype = "Exam"
      Endif

      If sExam Then
        sName = sExam
      Else
        sName = $rData["fldhead"]
      Endif

      If modClinic.GetSubExamBool($rData["fldid"]) = False Then
        If rsn["fldtanswertype"] = "Fixed Components" Then
          yyy = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer as col from tblstructexamoption where fldheadcode=&1", $rData["fldserialval"]))
          If yyy.Count Then
            modClinSub.InsertExamSubExam(Trim(txtencid.Text), $rData["fldid"], sName, yyy)
          Endif
        Endif
      Endif

      res1 = modDatabase.$myConn.Exec("select fldid,fldsubtexam,fldreport,fldtanswertype,fldabnormal,fldindex from tblpatientsubexam where fldheadid=&1", $rData["fldid"])
      If res1.Available = False Then
        If rsn["fldtanswertype"] = "Left and Right" Then
          yqualival = CLeftRight($rData["fldhead"], $rData["fldrepquali"], modFixClinic.GetLeftRightMainHeader("Exam", $rData["fldhead"]))
          If yqualival Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], yqualival[0], yqualival[1])
          Endif

        Else If rsn["fldtanswertype"] = "Date Time" Then
          xdate = GetDateValue($rData["fldhead"], ("Select Date Time"), Val($rData["fldrepquali"]))
          If xdate Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], modDate.DateStringForExam(xdate), False)
          Endif

        Else If rsn["fldtanswertype"] = "BS Date" Then
          xdate = GetDateValue($rData["fldhead"], ("Select Date Time"), modDate.ConvertToEnglishdate($rData["fldrepquali"]))
          If xdate Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], modDate.ConvertToLocaldate(xdate), False)
          Endif

        Else If rsn["fldtanswertype"] = "Text Table" Then
          sTable = modString.ConverTableRichTextToGrid(modClinic.GetExamValueString(Trim(txtencid.Text), $rData["fldid"]))
          opt = Split(sTable[0], ";")
          xval = TableEntry(opt, $rData["fldhead"], sTable[1])
          If xval Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], modString.GetTableFormatFromText(xval), False)
          Endif

        Else If rsn["fldtanswertype"] = "Qualitative" Then
          yqualival = GetQualiString($rData["fldhead"], $rData["fldrepquali"], "Exam")
          If yqualival Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], yqualival[0], yqualival[1])
          Endif

        Else
          If sOptName = "Clinical Scale" Then
            yqualival = modExamOption.GetClinScalePopUp(examtype, sName)
            If yqualival Then
              modClinSub.UpdateQualiQuantiData($rData["fldid"], yqualival[1], CFloat(yqualival[0]), False)
            Endif
          Else If sOptName = "RichText Area" Then
            yqualival = GetQualiRich(sName, $rData["fldrepquali"], examtype)
            If yqualival Then
              modClinSub.UpdateClinicQualiData($rData["fldid"], yqualival[0], yqualival[1], yqualival[2])
            Endif
          Else
            yqualival = GetQualiValues(sName, $rData["fldrepquali"], examtype)
            If yqualival Then
              modClinSub.UpdateClinicQualiData($rData["fldid"], yqualival[0], yqualival[1], yqualival[2])
            Endif
          Endif
        Endif

      Else If res1.Available = True Then
        xData = New Variant[]
        For Each res1
          xData.Add([res1["fldsubtexam"], res1["fldreport"], res1["fldid"], res1["fldtanswertype"], res1["fldabnormal"], res1["fldindex"]])
        Next
        xData.Add(["Final Impression", modClinic.GetExamValueString(Trim(txtencid.Text), $rData["fldid"], False), 0, "RichText Area", False, ""])
        hForm2 = New FmEnterMultiple($rData["fldid"], "Exam", sName, xData, "", "Current")
        hForm2.ShowModal
      Endif

    Else If $rData["fldtype"] = "Quantitative" Then
      xquantival = GetQuantiValues(examtype, Trim(txtencid.Text), sName, 0, 0, $rData["fldrepquanti"])
      If xquantival Then
        modClinSub.UpdateQuantiData($rData["fldid"], xquantival[0], xquantival[1])
      Endif
    Endif
    ShowClinicTable()

  Endif

End

Public Sub btneditflag_Click()

  Dim abc As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    abc = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetIconValue($rData["fldabnormal"]), True)
    If abc Then
      modClinSub.UpdateExamFlag($rData["fldid"], abc)
      ShowClinicTable()
    Endif
  Endif

End

Public Sub btndelete_Click()

  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", $rData["fldid"])
      If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
        res["fldsave"] = False
        res["flduserid"] = modBasic.$lbluser
        res.Update
        ShowClinicTable()
      Else
        Message.Warning("Authorization with " & res["flduserid"], ("OK"))
      Endif
    Endif
  Endif

End

''XXXXXXXX VIEW OPTIONS
Private Sub SelectDIrectEntryForm()

  Dim sName As String
  Dim xquantival As Variant[]
  Dim yqualival As Variant[]
  Dim lftrtval As Variant[]
  Dim xlimit As Float[]
  Dim opt As String[]
  Dim sVal As String[]
  Dim xval As String
  Dim xdate As Date

  Dim rsn As Result
  Dim sysConst As String
  Dim sType As String
  Dim OptionType As String
  Dim xdefval As Float
  Dim xstrval As String

  Dim cForm As CFindExam
  Dim examtype As String
  Dim sExam As String
  Dim sOptName As String
  Dim sDefault As String

  rsn = modDatabase.$myConn.Exec("select fldhead,fldtesttype,fldtanswertype,fldsysconst from tblstructexam where fldheadcode=&1", grdtreeview.Current.Key)
  If rsn.Available Then
    sType = rsn["fldtesttype"]
    OptionType = rsn["fldtanswertype"]
    sysConst = rsn["fldsysconst"]
    sName = grdtreeview.Current.Text

    If sysConst Then
      cForm = New CFindExam(sysConst)
      examtype = cForm.GetExamMode()
      sExam = cForm.GetExamName()
      sOptName = cForm.GetExamOption()
      sDefault = cForm.GetExamDefault()
    Endif

    If sType = "Quantitative" Then
      xdefval = 0
      If sysConst Then
        If OptionType = "Sys Constant" And If sOptName = "Calculated" Then
          If sDefault Then
            xdefval = modReportVar.GetCalcValueFloat(sDefault, Trim(txtencid.Text))
          Endif
        Else If OptionType = "Calculated" Then
          xdefval = modReportVar.GetCalcValueFloat(sysConst, Trim(txtencid.Text))
        Else If OptionType = "CopyValue" Then
          xdefval = modReportVar.GetLastQuantiParamValue(examtype, sExam, Trim(txtencid.Text))
        Endif
        xlimit = modClinic.GetBothQuantiExamVal(sExam, Trim(txtencid.Text))
      Else
        xlimit = [0, 0]
      Endif
      xquantival = GetQuantiValues(examtype, Trim(txtencid.Text), sName, xlimit[0], xlimit[1], xdefval)
      If xquantival Then
        modClinSub.AddQuantiData(Trim(txtencid.Text), grdtreeview.Current.Key, grdtreeview.Current.Text, xquantival[0], xquantival[1], cmbcategory.Text, "", $Category)
      Endif

    Else
      If sysConst Then
        xstrval = ""
        If OptionType = "Sys Constant" Then
          If sOptName = "Calculated" Then
            If sDefault Then
              xstrval = modReportVar.GetCalcValueVariant(sDefault, Trim(txtencid.Text))
            Endif
            yqualival = GetQualiValues(sName, xstrval, examtype)
          Else
            yqualival = modExamOption.GetQualiExamOptionDirectValue(sExam, "", examtype, sOptName)
          Endif
        Else If OptionType = "Calculated" Then
          xstrval = modReportVar.GetCalcValueVariant(sysConst, Trim(txtencid.Text))
          yqualival = GetQualiValues(sName, xstrval, examtype)
        Else If OptionType = "CopyValue" Then
          xstrval = modReportVar.GetLastQualiParamValue(examtype, sExam, Trim(txtencid.Text))
          yqualival = GetQualiValues(sName, xstrval, examtype)
        Endif

      Else
        If OptionType = "Date Time" Then
          xdate = GetDateValue(("Select Date Time"), sName, "")
          If xdate Then
            yqualival = [modDate.DateStringForExam(xdate), False]
          Endif
        Else If OptionType = "BS Date" Then
          xdate = GetDateValue(("Select Date Time"), sName, "")
          If xdate Then
            yqualival = [modDate.ConvertToLocaldate(xdate), False]
          Endif
        Else If OptionType = "Qualitative" Then
          yqualival = GetQualiString(sName, "", "Exam")
        Else If OptionType = "Left and Right" Then
          lftrtval = CLeftRight(sName, "", modFixClinic.GetLeftRightMainHeader("Exam", sName))
          If lftrtval Then
            yqualival = [lftrtval[0], lftrtval[1]]
          Endif
        Else If OptionType = "Single Selection" Or If OptionType = "Dichotomous" Or If OptionType = "Multiple Selection" Then
          opt = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer from tblstructexamoption where fldheadcode=&1 ORDER BY fldindex", grdtreeview.Current.Key))
          If opt.Count Then
            sVal = SubChoose(opt, OptionType, grdtreeview.Current.Text)
            If sVal Then
              yqualival = [sVal.Join(gb.NewLine), False]
            Endif
          Else
            yqualival = GetQualiValues(sName, "", "Exam")
          Endif
        Else If OptionType = "Text Table" Then
          opt = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer from tblstructexamoption where fldheadcode=&1 ORDER BY fldindex", grdtreeview.Current.Key))
          If opt.Count Then
            xval = TableEntry(opt, grdtreeview.Current.Text, "")
            If xval Then
              yqualival = [modString.GetTableFormatFromText(xval), False]
            Endif
          Else
            yqualival = GetQualiValues(sName, "", "Exam")
          Endif
        Else If OptionType = "RichText Area" Then
          yqualival = GetQualiRich(sName, "", "Exam")
        Else
          yqualival = GetQualiValues(sName, "", "Exam")
        Endif
      Endif

      If yqualival Then
        If yqualival.Count = 3 And If yqualival[2] Then
          modClinSub.AddClinicExam(Trim(txtencid.Text), grdtreeview.Current.Key, grdtreeview.Current.Text, yqualival[0], CFloat(yqualival[2]), yqualival[1], cmbcategory.Text, sysConst, $Category)
        Else
          modClinSub.AddClinicExam(Trim(txtencid.Text), grdtreeview.Current.Key, grdtreeview.Current.Text, yqualival[0], 0, yqualival[1], cmbcategory.Text, sysConst, $Category)
        Endif
      Endif
    Endif ''quali or quanti

  Endif

End

Public Sub btnfullrep_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, UCase($Category), "",, txtencid.text)

End

Public Sub btnreposel_Click()

  Dim xPath As String

  If txtencid.text Then
    xPath = modCHTMLPatient.ShowRecomExaminationpatient(Trim(txtencid.text), $Category, cmbcategory.Text, $sDepart, $reference)
    modControlSub.OpenHTMLPreview(Trim(txtencid.text), xPath, "ReportSize")
  Endif

End

Public Sub btnblankform_Click()

  Me.Parent.DeleteChildren()
  modGeneralMain.LoadStructuredForm($Category, $sDepart)

End

Public Sub mnuimage_Click()

  Dim hForm As FmTestImage

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmTestImage("IMAGE", Trim(txtencid.Text), $rData["fldid"], $rData["fldhead"], "Examination", "")
    hForm.ShowModal
  Endif

End

Public Sub cmbcategory_Render()

  modJavaScript.SetSelect2Combo(cmbcategory)

End

''--------------------Populate Tree View -------------------------------
Private Sub FillClinicalTree(TreeView1 As WebTree, xSubClass As String, xCategory As String, sDepart As String)

  Dim str3 As String
  Dim str4 As String

  Dim res3 As Result
  Dim k As Integer
  Dim res4 As Result
  Dim l As Integer

  Dim pic2 As String
  Dim pic3 As String
  Dim ref As String

  pic2 = "icons/coll2.png"
  pic3 = "icons/coll3.png"

  ref = $reference
  TreeView1.Clear

  str3 = "select distinct(flditem) from tblstructexam where fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and fldclass=&4 ORDER BY flditemid"
  res3 = modDatabase.$myConn.Exec(str3, xSubClass, xCategory, ref, sDepart)
  If res3.Available Then
    res3.MoveFirst
    For k = 1 To res3.Count
      TreeView1.Add(CStr(k) & "@" & res3["flditem"], res3["flditem"], pic2)

      str4 = "select fldheadcode,fldhead from tblstructexam where fldsubclass=&1 and fldcategory=&2 and flditem=&3 and fldreferencee=&4 and fldclass=&5 ORDER BY fldheadid"
      res4 = modDatabase.$myConn.Exec(str4, xsubClass, xCategory, res3["flditem"], ref, sDepart)
      If res4.Available Then
        res4.MoveFirst
        For l = 1 To res4.Count
          TreeView1.Add(res4["fldheadcode"], res4["fldhead"], pic3, CStr(k) & "@" & res3["flditem"])
          res4.MoveNext
        Next
      Endif

      res3.MoveNext
    Next
  Endif

End

''------------ buttons---------------
Public Sub btndemograph_Click()

  Dim hForm As FmPatdemograph

  If txtencid.Text Then
    hForm = New FmPatdemograph(Trim(txtencid.Text), "Clinical")
    hForm.ShowModal
  Endif

End

Public Sub btnvital_Click()

  Dim hForm As FmVItalMobile

  If txtencid.Text Then
    hForm = New FmVItalMobile(Trim(txtencid.Text))
    hForm.ShowModal
  Endif

End

Public Sub btngenservice_Click()

  Dim hForm As FmMiniService

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Service") = True Then
      hForm = New FmMiniService(Trim(txtencid.Text), $sPackage)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btnlabs_Click()

  Dim hForm As FmTestList

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Test") = True Then
      hForm = New FmTestList(Trim(txtencid.Text), $sPackage)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btnradio_Click()

  Dim hForm As FmRadioList

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Radio") = True Then
      hForm = New FmRadioList(Trim(txtencid.Text), $sPackage)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btnpharm_Click()

  Dim hForm As FmMedOrder

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Pharmacy") = True Then
      hForm = New FmMedOrder(Trim(txtencid.Text), $sTatus, $sPackage)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btnimage_Click()

  Dim hForm As FmPatImage

  If txtencid.Text Then
    hForm = New FmPatImage("IMAGE", Trim(txtencid.Text), "")
    hForm.ShowModal
  Endif

End

Public Sub btnpacs_Click()

  Dim hForm As FmPacsShow

  If txtencid.Text Then
    hForm = New FmPacsShow(Trim(txtencid.Text), "Visit")
    hForm.ShowModal
  Endif

End

''--------------- Menus ----------------
Public Sub mnuexam_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowPatientExaminationgReport(Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnudiagno_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowPatientLaboratoryReport(Trim(txtencid.Text), MMain.$defUnit)
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuradio_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowPatRadioReportbyEncID(Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnudrugdosing_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowNursingDosing(Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnucompreport_Click()

  If txtencid.Text Then
    modPatReports.GetSelectedPatientValues(Trim(txtencid.Text), MMain.$defUnit)
  Endif

End
