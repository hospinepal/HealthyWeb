' Gambas module file

Public $LastEncounterID As String
Public $HideFormList As String[]
Public $FormOpenList As Variant[]
Public $FormOpenQue As Integer

Public $CompletionList As String[]
Public $CompletionEnable As String

' Public Sub InsertTexEditortData(xTextArea As WebTextArea)
'
' End

Public Sub GetOpenModalForm(sWebForm As WebForm)

  If modBasic.$TabletModeEnable = "Yes" Then
    ' sWebForm.Move(0, 0)
  Endif

End

Public Function GetWebDepartList() As String[]

  Dim i As Integer
  Dim lstequation As String[]
  Dim xvar As String

  lstequation = New String[]
  For i = 1 To 100
    xvar = modSettings.ShowSettingFromFIle("Departments/Comp" & CStr(i))
    If xvar Then
      lstequation.Add(xvar)
    Endif
  Next
  Return lstequation

End

Public Sub SetAutoCompleteTextArea()

  Dim xPath As String
  Dim hFile As File
  Dim sLine As String
  Dim sWord As String[]

  xPath = modHelpVariable.$docsDirectory &/ "textcompletion"
  $CompletionList = New String[]
  If Exist(xPath) Then
    hFile = Open xPath
    modBasic.DebugString("Open File " & xPath)
    For Each sLine In hFile.Lines
      If Trim(sLine) Then
        sWord = Split(sLine, ";")
        If sWord.Count = 2 Then
          $CompletionList.Add("{ key: " & JS(sWord[0]) & ", value: " & JS(sWord[1]) & " }")
        Else
          $CompletionList.Add("{ key: " & JS(Trim(sLine)) & ", value: " & JS(Trim(sLine)) & " }")
        Endif
      Endif
    Next
  Endif
  WebForm._AddJavascript("$AutoTextComoleteList = [" & modGeneralMain.$CompletionList.Join(",") & "]")
  $CompletionEnable = modSettings.ShowSettingFromFIle("GeneralSettings/CompletionList")

End

Public Function GetSystemIcon(sImage As String) As String

  If sImage Begins "icon:/" Then
    Return "/" &/ Application.Root &/ "icon:" & Replace(Mid$(sImage, 7), "/", ":")
  Else
    Return "/" &/ Application.Root &/ sImage
  Endif

End

Public Sub SetActiveForms()

  If MMain.$SISHAppMode = "HIS" Or If MMain.$SISHAppMode = "REP" Then ''remoteoptimized
    $HideFormList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldformname from tbluserformaccess where flduserid=&1 and fldcategory=&2 and fldstatus=&3", modBasic.$lbluser, modHelpVariable.$LogInCategory, "Inactive"))                   ''
  Else
    $HideFormList = New String[]
  Endif

End

Public Sub ShowSelectedFormMenu(mnuform As WebMenu)

  If $HideFormList.Exist(mnuform.Tag) = True Then
    mnuform.Visible = False
  Endif

End

Public Sub RecordFormUse(frm As WebForm)

  Dim res As Result
  Dim xx As String

  ' xx = modString.GetDateString(modHelpVariable.$LogInTime) & ":" & xx & ":" & frm.Id
  xx = modString.GetDateString(Now()) & ":" & Session.Id & ":" & CStr(frm.Id)
  res = modDatabase.$myConn.Create("tbljobrecord")
  res["fldindex"] = xx
  res["fldfrmname"] = frm.Name
  res["fldfrmlabel"] = frm.Title
  res["flduser"] = modBasic.$lbluser
  res["fldcomp"] = modBasic.$compID
  res["fldentrytime"] = Now()
  res["fldexittime"] = ""
  res["fldpresent"] = True
  res["fldhostuser"] = CGI["HTTP_USER_AGENT"]
  res["fldhostip"] = modHelpVariable.$MACAddress
  res["fldhostname"] = CGI["SERVER_SOFTWARE"] & ":" & Application.Name & "-" & Application.Version
  res["fldhostmac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
  res.Update()

End

Public Sub RecordFormExit(frm As WebForm)

  Dim res As Result
  Dim xx As String

  xx = modString.GetDateString(modHelpVariable.$LogInTime) & ":" & Session.Id & ":" & CStr(frm.Id)
  res = modDatabase.$myConn.Edit("tbljobrecord", "fldindex=&1 and fldpresent=&2", xx, True)                                                                               ''"
  If res.Available = True Then
    For Each res
      res["fldexittime"] = Now()
      res["fldpresent"] = False
      res.Update()
    Next
  Endif

End

''------------------------ cache setting --------------------
Public Sub RemovePatientCacheSelected(sItem As String)

  If sItem = "PatientData" Then
    modPatient.$PatNumData.Clear()
    modPatient.$PatFirNameData.Clear()
    modPatient.$PatSurNameData.Clear()
    modPatient.$PatGenderData.Clear()
    modPatient.$PatEthnicData.Clear()
    modPatient.$PatDOBData.Clear()
    modPatient.$PatAddressData.Clear()
    modPatient.$PatDistrictData.Clear()
    modPatient.$PatWardData.Clear()
    modPatient.$PatEncryptData.Clear()
    modPatient.$PatCodeData.Clear()
    modPatient.$PatRelationData.Clear()
    modPatient.$PatGuardData.Clear()
    modPatient.$PatContactData.Clear()
    modPatient.$PatEMailData.Clear()

    modPatient.$PatVisType.Clear()
    modPatient.$PatRegDepartData.Clear()
    modPatient.$PatDORegData.Clear()
    modPatient.$PatDOAData.Clear()
    modPatient.$PatDODData.Clear()
    modPatient.$PatDOFollData.Clear()

  Else If sItem = "Diagnostic" Then
    modFixLab.$TestItemQualiQuanti.Clear()
    modFixLab.$TestItemCategory.Clear()
    modFixLab.$TestIDFromSysConst.Clear()
    modFixLab.$TestSpecimen.Clear()
    modFixLab.$TestCritValue.Clear()
    modFixLab.$TestOptionType.Clear()
    modFixLab.$TestCaption.Clear()
    modFixLab.$TestToolTip.Clear()

    modFixLab.$TestDrugHypo.Clear()
    modFixLab.$TestdrugHyper.Clear()
    modFixLab.$TestSyndroBrady.Clear()
    modFixLab.$TestSyndroTachy.Clear()

    modFixClinic.$ExamItemQualiQuanti.Clear()
    modFixClinic.$ExamIDFromSysConst.Clear()
    modFixClinic.$ExamCritValue.Clear()
    modFixClinic.$ExamItemCategory.Clear()
    modFixClinic.$ExamOptionType.Clear()
    modFixClinic.$ExamSysOptionType.Clear()

    modFixClinic.$ExamDrugHypo.Clear()
    modFixClinic.$ExamdrugHyper.Clear()
    modFixClinic.$ExamSyndroBrady.Clear()
    modFixClinic.$ExamSyndroTachy.Clear()

    modFixRadio.$RadioItemCategory.Clear()
    modFixRadio.$RadioIDFromSysConst.Clear()
    modFixRadio.$RadioOptionType.Clear()
    modFixPatho.$SymptomCategory.Clear()
    modFixRadio.$RadioCaption.Clear()

    modLabTest.$LabIDUnitReference.Clear()
    modLabTest.$LabIDUnitAccepTRange.Clear()
    modLabTest.$LabIDUnitUnitString.Clear()
    modLabTest.$LabIDEncounter.Clear()
    modLabTest.$LabIDTestName.Clear()
    modLabTest.$LabIDTestMethod.Clear()

  Else If sItem = "UserData" Then
    modGeneral.$UserNameData.Clear()
    modGeneral.$UserCodeData.Clear()
    modGeneral.$EthnicCodeData.Clear()
    modGeneral.$UserContactData.Clear()

  Else If sItem = "UserSharing" Then
    modGeneral.$UserAccountData.Clear()
    modGeneral.$UserPANNoData.Clear()
    modGeneral.$UserTDSData.Clear()
    modSharingGroup.$GroupSharePercentData.Clear()
    modSharingGroup.$GroupShareAmountData.Clear()

  Else If sItem = "Repository" Then
    modDataRepo.$RepoDistrictColl.Clear()
    modDataRepo.$RepoCategoryColl.Clear()
    modDataRepo.$RepoProvinceColl.Clear()
    modDataRepo.$RepoMunicipalColl.Clear()

  Else If sItem = "DateData" Then
    modDate.$LocalDateData.Clear()
    modDataRepo.$DistMunicipals.Clear()

  Else If sItem = "ExecValue" Then
    modExternal.$ExecValueColl.Clear()

  Else If sItem = "Medicine" Then
    modMedConstant.$MedBrandToGeneric.Clear()
    modMedConstant.$MedCodeFromStock.Clear()
    modMedConstant.$MedDrugFromStock.Clear()
    modMedConstant.$MedBrandFromStock.Clear()
    modMedConstant.$MedCodeFromDrug.Clear()
    modMedConstant.$MedSensiFromStock.Clear()
    modMedConstant.$MedRiskFromStock.Clear()
    modMedConstant.$MedStrengthStock.Clear()
    modMedConstant.$MedStrenUntStock.Clear()
    modMedConstant.$MedNarcoticStock.Clear()
    modMedConstant.$MedCategFromStock.Clear()

    modPharmLabel.$PharmPackVolume.Clear()
    modPharmLabel.$PharmPackVolUnit.Clear()

  Else If sItem = "Inventory" Then
    modStock.$ItemStorageCodeData.Clear()
    modStock.$ItemStockNameData.Clear()
    modStock.$ItemStockBatchData.Clear()
    modStock.$ItemStockExpData.Clear()
    modStock.$SurgiNameFromStock.Clear()
    modStock.$ExtraNameFromStock.Clear()

  Else If sItem = "Account" Then
    modNonMedical.$CashItemTarget.Clear()
    modNonMedical.$CashItemID.Clear()
    modNonMedical.$CashItemGroup.Clear()
    modNonMedical.$CashAccGroup.Clear()
    modNonMedical.$BillInvTypeData.Clear()
    modNonMedical.$BillReferenceData.Clear()

  Else If sItem = "DrugProblems" Then
    modMedError.$CodeReference.Clear()
    modMedError.$DrugReference.Clear()
    modMedError.$CodeAllowPRN.Clear()
    modMedError.$CodeChemiClass.Clear()
    modMedError.$DrugAgeContra.Clear()
    modMedError.$StockPreservIn.Clear()
    modMedError.$StockAllowTabBreak.Clear()

    modMedError.$CodePregnancyPrec.Clear()
    modMedError.$CodeHepaticPrec.Clear()
    modMedError.$CodeDrugIntxn.Clear()
    modMedError.$CodeDiseaseContra.Clear()
    modMedError.$CodeAdverseRxn.Clear()
    modMedError.$CodeDrugAllergy.Clear()
    modMedError.$DrugInjecIncompat.Clear()
    modMedError.$DrugFluidIncompat.Clear()

  Endif

End

Public Sub CLearUserCollection()

  Dim xx As String[] = ["PatientData", "Diagnostic", "UserData", "UserSharing", "DateData", "Medicine", "Inventory", "Account", "DrugProblems", "ExecValue", "Repository"]
  Dim sItem As String
  Dim sList As String[]

  sList = SelectListView(("Select Cache Type"), xx, True)
  If sList.Count Then
    For Each sItem In sList
      RemovePatientCacheSelected(sItem)
    Next
  Endif

End

''==================== LOAD FORMS =====================
''Cash Billing Form
Public Sub LoadCashBillingForm()

  Dim hForm As FmCashBilling

  hForm = New FmCashBilling(fmCashier.Workspace1)

End

''deposit form
Public Sub LoadDepositEntryForm()

  Dim hForm As FmDeposit

  hForm = New FmDeposit(fmCashier.Workspace1)

End

''Return form
Public Sub LoadCashreturnForm()

  Dim hForm As FmBillReturn

  hForm = New FmBillReturn(fmCashier.Workspace1)

End

''Dispensing Form
Public Sub LoadDispensingForm()

  Dim hForm As FmPatPharmacy

  hForm = New FmPatPharmacy(fmDispensar.Workspace1)

End

''pharmacy return
Public Sub LoadPharmReturnForm()

  Dim hForm As FmReturn

  hForm = New FmReturn(fmDispensar.Workspace1)

End

''Due clearance
Public Sub LoadDueClearanceForm()

  ' Dim hForm As FmDueClear
  '
  ' hForm = New FmDueClear(fmDispensar.Workspace1)

End

''OPD Form
Public Sub LoadOPDClinicForm()

  Dim hForm As FmPatCliNew

  hForm = New FmPatCliNew("", 0, "", fmOfficer.Workspace1)

End

''IP Form
Public Sub LoadInpatientForm()

  Dim hForm As FmPatientMain

  hForm = New FmPatientMain("", fmOfficer.Workspace1)

End

''Delivery Form
Public Sub LoadDeliveryForm()

  Dim hForm As FmDeliveryNew

  hForm = New FmDeliveryNew("", fmOfficer.Workspace1)

End

''Procedure
Public Sub LoadProcedureForm()

  Dim hForm As FmProcedure

  hForm = New FmProcedure(fmOfficer.Workspace1)

End

''Structured
Public Sub LoadStructuredForm(sType As String, sDept As String)

  Dim hForm As FmWardHistory

  hForm = New FmWardHistory(sType, "", sDept, fmOfficer.Workspace1)

End

''Sample Addition Form
Public Sub LoadSampleAddForm()

  Dim hForm As FmSamplingFir

  hForm = New FmSamplingFir(fmTechnician.Workspace1)

End

''Sampling Form
Public Sub LoadSamplingForm()

  Dim hForm As FmSampling

  hForm = New FmSampling(fmTechnician.Workspace1)

End

''Reporting Form
Public Sub LoadReportingForm()

  Dim hForm As FmLabReporting

  hForm = New FmLabReporting(fmTechnician.Workspace1)

End

Public Sub LoadCashVerifyForm()

  Dim hForm As FmCashVerify

  hForm = New FmCashVerify(fmAccount.Workspace1)

End

Public Sub LoadRadioReporting()

  Dim hForm As FmRadioReporting

  hForm = New FmRadioReporting(fmTechnician.Workspace1)

End

''Maternal Register
Public Sub LoadMatNeonatalForm()

  Dim hForm As FmMatNeoExam

  hForm = New FmMatNeoExam("", fmHMISMatNeo.Workspace1)

End

Public Sub SendBugReport(sUser As String)

  Dim hForm As FmRemoteMail

  hForm = New FmRemoteMail("", "", "Bug Report", "")
  hForm.ShowModal

End
